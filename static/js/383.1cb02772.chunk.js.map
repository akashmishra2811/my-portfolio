{"version":3,"file":"static/js/383.1cb02772.chunk.js","mappings":"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","sources":["data/resume/skills.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","pages/Stats.js"],"sourcesContent":["const skills = [\r\n  {\r\n    title: \"React\",\r\n    competency: 5,\r\n    category: [\"Web Development\", \"Javascript\"],\r\n  },\r\n  {\r\n    title: \"Javascript\",\r\n    competency: 5,\r\n    category: [\"Web Development\", \"Languages\", \"Javascript\"],\r\n  },\r\n  {\r\n    title: \"Redux\",\r\n    competency: 4,\r\n    category: [\"Web Development\", \"Javascript\"],\r\n  },\r\n  {\r\n    title: \"Spring Boot \",\r\n    competency: 4,\r\n    category: [\"RESTful API\"],\r\n  },\r\n  {\r\n    title: \"Java\",\r\n    competency: 4,\r\n    category: [\"RESTful API\", \"Languages\"],\r\n  },\r\n  {\r\n    title: \"Node JS \",\r\n    competency: 3,\r\n    category: [\"RESTful API\"],\r\n  },\r\n  {\r\n    title: \"PostgreSQL/SQLite3/SQL/Redshift\",\r\n    competency: 2,\r\n    category: [\"Web Development\", \"Databases\", \"Languages\"],\r\n  },\r\n  {\r\n    title: \"Typescript\",\r\n    competency: 4,\r\n    category: [\"Web Development\", \"Languages\", \"Javascript\"],\r\n  },\r\n  {\r\n    title: \"HTML + SASS/SCSS/CSS\",\r\n    competency: 3,\r\n    category: [\"Web Development\", \"Languages\"],\r\n  },\r\n  {\r\n    title: \"GIT \",\r\n    competency: 2,\r\n    category: [\"Tools\", \"Languages\"],\r\n  },\r\n  {\r\n    title: \"Python\",\r\n    competency: 3,\r\n    category: [\"Languages\", \"Python\"],\r\n  },\r\n  {\r\n    title: \"C++\",\r\n    competency: 3,\r\n    category: [\"Languages\"],\r\n  },\r\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\r\n\r\n// this is a list of colors that I like. The length should be === to the\r\n// number of categories. Re-arrange this list until you find a pattern you like.\r\nconst colors = [\r\n  '#6968b3',\r\n  '#37b1f5',\r\n  '#40494e',\r\n  '#515dd4',\r\n  '#e47272',\r\n  '#cc7b94',\r\n  '#3896e2',\r\n  '#c3423f',\r\n  '#d75858',\r\n  '#747fff',\r\n  '#64cb7b',\r\n];\r\n\r\nconst categories = [...new Set(skills.flatMap(({ category }) => category))]\r\n  .sort()\r\n  .map((category, index) => ({\r\n    name: category,\r\n    color: colors[index],\r\n  }));\r\n\r\nexport { categories, skills };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryButton = ({ handleClick, active, label }) => (\r\n  <button\r\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\r\n    type=\"button\"\r\n    onClick={() => handleClick(label)}\r\n  >\r\n    {label}\r\n  </button>\r\n);\r\n\r\nCategoryButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\r\n};\r\n\r\nexport default CategoryButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SkillBar = ({ data, categories }) => {\r\n  const { category, competency, title } = data;\r\n\r\n  // TODO: Consider averaging colors\r\n  const titleStyle = {\r\n    background: categories\r\n      .filter((cat) => category.includes(cat.name))\r\n      .map((cat) => cat.color)[0],\r\n  };\r\n\r\n  const barStyle = {\r\n    ...titleStyle,\r\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"skillbar clearfix\">\r\n      <div className=\"skillbar-title\" style={titleStyle}>\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className=\"skillbar-bar\" style={barStyle} />\r\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSkillBar.propTypes = {\r\n  data: PropTypes.shape({\r\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    competency: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  categories: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      color: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nSkillBar.defaultProps = {\r\n  categories: [],\r\n};\r\n\r\nexport default SkillBar;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CategoryButton from './Skills/CategoryButton';\r\nimport SkillBar from './Skills/SkillBar';\r\n\r\nconst Skills = ({ skills, categories }) => {\r\n  const initialButtons = Object.fromEntries(\r\n    [['All', false]].concat(categories.map(({ name }) => [name, false])),\r\n  );\r\n\r\n  const [buttons, setButtons] = useState(initialButtons);\r\n\r\n  const handleChildClick = (label) => {\r\n    // Toggle button that was clicked. Turn all other buttons off.\r\n    const newButtons = Object.keys(buttons).reduce(\r\n      (obj, key) => ({\r\n        ...obj,\r\n        [key]: label === key && !buttons[key],\r\n      }),\r\n      {},\r\n    );\r\n    // Turn on 'All' button if other buttons are off\r\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\r\n    setButtons(newButtons);\r\n  };\r\n\r\n  const getRows = () => {\r\n    // search for true active categories\r\n    const actCat = Object.keys(buttons).reduce(\r\n      (cat, key) => (buttons[key] ? key : cat),\r\n      'All',\r\n    );\r\n\r\n    const comparator = (a, b) => {\r\n      let ret = 0;\r\n      if (a.competency > b.competency) ret = -1;\r\n      else if (a.competency < b.competency) ret = 1;\r\n      else if (a.category[0] > b.category[0]) ret = -1;\r\n      else if (a.category[0] < b.category[0]) ret = 1;\r\n      else if (a.title > b.title) ret = 1;\r\n      else if (a.title < b.title) ret = -1;\r\n      return ret;\r\n    };\r\n\r\n    return skills\r\n      .sort(comparator)\r\n      .filter((skill) => actCat === 'All' || skill.category.includes(actCat))\r\n      .map((skill) => (\r\n        <SkillBar categories={categories} data={skill} key={skill.title} />\r\n      ));\r\n  };\r\n\r\n  const getButtons = () => Object.keys(buttons).map((key) => (\r\n    <CategoryButton\r\n      label={key}\r\n      key={key}\r\n      active={buttons}\r\n      handleClick={handleChildClick}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"skills\">\r\n      <div className=\"link-to\" id=\"skills\" />\r\n      <div className=\"title\">\r\n        <h3>Skills</h3>\r\n      </div>\r\n      <div className=\"skill-button-container\">{getButtons()}</div>\r\n      <div className=\"skill-row-container\">{getRows()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSkills.propTypes = {\r\n  skills: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      competency: PropTypes.number,\r\n      category: PropTypes.arrayOf(PropTypes.string),\r\n    }),\r\n  ),\r\n  categories: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      color: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nSkills.defaultProps = {\r\n  skills: [],\r\n  categories: [],\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Main from \"../layouts/Main\";\r\nimport { categories, skills } from \"../data/resume/skills\";\r\nimport Skills from \"../components/Resume/Skills\";\r\n\r\nconst Stats = () => (\r\n  <Main title=\"Stats\" description=\"Some statistics about Akash Mishra\">\r\n    <article className=\"post\" id=\"stats\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2>\r\n            <Link to=\"/stats\">Skills</Link>\r\n          </h2>\r\n        </div>\r\n      </header>\r\n      <Skills skills={skills} categories={categories} />,\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Stats;\r\n"],"names":["skills","title","competency","category","map","skill","sort","colors","categories","Set","flatMap","_ref","index","name","color","handleClick","active","label","_jsx","className","concat","type","onClick","children","SkillBar","data","titleStyle","background","filter","cat","includes","barStyle","width","String","Math","min","max","_jsxs","style","defaultProps","Skills","initialButtons","Object","fromEntries","_ref2","buttons","setButtons","useState","handleChildClick","newButtons","keys","reduce","obj","key","All","some","id","CategoryButton","getRows","actCat","comparator","a","b","ret","Stats","Main","description","Link","to"],"sourceRoot":""}